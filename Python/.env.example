# The base URL of the Upvest Investment API
UPVEST_API_BASE_URL=https://sandbox.upvest.co

# The following 3 env vars are mutually exclusive:
#
# UPVEST_API_HTTP_SIGN_PRIVATE_KEY_FILENAME,
# UPVEST_API_HTTP_SIGN_PRIVATE_KEY *or*
# UPVEST_API_HTTP_SIGN_PRIVATE_KEY_BASE64
#
# Please provide only one of them, and never more than one of them at the same
# time!
#
# Either one of them allows you to provide the private key for
# HTTP message signatures.
#
# See the following link for how to generate a private / public key pair:
# https://docs.upvest.co/tutorials/implementing_http_signatures_v15#ecdsa
# NOTE: This example only has been tested with ECDSA keys so far.

# The file name (including the path) of a `*.pem` file
# which holds the private key for HTTP message signatures.
UPVEST_API_HTTP_SIGN_PRIVATE_KEY_FILENAME=

# The private key for HTTP message signatures in PEM format.
# In other words, the contents of a `*.pem` file, including the
# `-----BEGIN EC PRIVATE KEY-----` markers.
UPVEST_API_HTTP_SIGN_PRIVATE_KEY=

# The same as UPVEST_API_HTTP_SIGN_PRIVATE_KEY, but allows to "tunnel" the
# multi-line PEM format into environments where multi-line environment
# variables are not possible.
# I.e. base64-encode the PEM format onto 1 line and use it with
# this environment variable name.
UPVEST_API_HTTP_SIGN_PRIVATE_KEY_BASE64=

# The password / passphrase for the private key file.
UPVEST_API_HTTP_SIGN_PRIVATE_KEY_PASSPHRASE=

# The key ID under which the private / public key pair
# is registered at Upvest.
# You receive this information from Upvest.
UPVEST_API_KEY_ID=


# The client ID has to be sent in an `upvest-client-id` header for each API
# request. It is also used to request authentication tokens from the
# Upvest Investment API.
# You receive this information from Upvest.
UPVEST_API_CLIENT_ID=

# The client secret needed to request authentication tokens from the
# Upvest Investment API.
# You receive this information from Upvest.
UPVEST_API_CLIENT_SECRET=

# The OAuth2 scopes to equip the API client's auth token with. Comma-separated,
# because that's easier to set as an environment variable than OAuth2's
# space-separated scopes. So, **no whitespace**, please!
UPVEST_API_SCOPES=

################################################################################
# OPTIONAL: FILE ENCRYPTION
#
# You only need to consider these values if you are downloading files from the
# `/files` endpoint of the Upvest Investment API.
#
# Upvest strongly recommends to encrypt those files in storage and transit.
# However, it is optional to do so.
# In other words: if you really must, then Upvest can provide unencrypted files
# and you can download them unencrypted.
#
# The following environment variables starting with the
# `UPVEST_API_FILE_ENCRYPTION_PRIVATE_KEY*` prefix allow you to provide a
# PGP private key for File Encryption / Decryption.
# The corresponding PGP public key needs to be provided to Upvest beforehand.
################################################################################

# The following 3 env vars are mutually exclusive:
#
# UPVEST_API_FILE_ENCRYPTION_PRIVATE_KEY_FILENAME,
# UPVEST_API_FILE_ENCRYPTION_PRIVATE_KEY *or*
# UPVEST_API_FILE_ENCRYPTION_PRIVATE_KEY_BASE64
#
# Please provide only one of them, and never more than one of them at the same
# time!
#
# Either one of them allows you to provide the PGP private key for
# File Encryption / Decryption.
#
# See the following link for how to generate a private / public key pair:
# https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key
# NOTE: This example only has been tested with PGP RSA keys so far.

# The file name (including the path) of a PGP ASCII armored file
# which holds the private key for File Encryption / Decryption.
UPVEST_API_FILE_ENCRYPTION_PRIVATE_KEY_FILENAME=

# The private key for File Encryption / Decryption in PGP ASCII armor format.
# In other words, the contents of a PGP ASCII armored file, including the
# `-----BEGIN PGP PRIVATE KEY BLOCK-----` markers.
UPVEST_API_FILE_ENCRYPTION_PRIVATE_KEY=

# The same as UPVEST_API_FILE_ENCRYPTION_PRIVATE_KEY, but allows to "tunnel"
# the multi-line PGP ASCII armor format into environments where multi-line
# environment variables are not possible.
# I.e. base64-encode the PGP ASCII armor format onto 1 line and use it with
# this environment variable name.
UPVEST_API_FILE_ENCRYPTION_PRIVATE_KEY_BASE64=

# The password / passphrase for the private key file for file encryption.
UPVEST_API_FILE_ENCRYPTION_PRIVATE_KEY_PASSPHRASE=

# OPTIONAL
UPVEST_API_FILE_NAMESPACE=

# OPTIONAL
# The template string needs to contain this string replacement marker:
#
# `{filename_timestamp}`
#
# Which will get replaced with a date for which today is T+1.
# Defaults to `mifir_reporting_files_{filename_timestamp}.zip`.
UPVEST_API_FILENAME_TEMPLATE=mifir_reporting_files_{filename_timestamp}.zip

# OPTIONAL
# The namespace to organise files under. You can also imagine it as a kind of
# "directory".
# Defaults to `mifir_reports`
UPVEST_API_FILE_NAMESPACE=mifir_reports

# OPTIONAL
# In some development environments, report files are only available for some
# fixed dates.
# In this case, you can pin the report date in the `download_mifir_report.py`
# example. Use YYYY-MM-DD format.
UPVEST_API_EXAMPLE_REPORT_DATE=
